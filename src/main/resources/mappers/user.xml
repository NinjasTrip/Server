<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ninjatrip.user.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.ninjatrip.user.dto.User">
        <id column="user_idx" property="userIdx"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickName"/>
        <result column="refresh_token" property="refreshToken"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <!-- userIdx로 사용자 정보를 가져오는 쿼리 -->
    <select id="getUserByUserIdx" resultMap="UserResultMap">
        SELECT *
        FROM User
        WHERE user_idx = #{userIdx}
    </select>

    <!-- 회원가입 쿼리 -->
    <insert id="createUser" parameterType="UserResultMap">
        INSERT INTO User (email, password, nickname)
        VALUES (#{email}, #{password}, #{nickName})
    </insert>

    <!-- 사용자 삭제 쿼리 -->
    <delete id="deleteUser">
        DELETE FROM User WHERE user_idx = #{userIdx}
    </delete>

    <!-- 사용자 정보 업데이트 쿼리 -->
    <update id="updateUser" parameterType="UserResultMap">
        UPDATE User
        SET
        email = #{email},
        password = #{password},
        nickname = #{nickName},
        updated_at = default  <!-- 업데이트 시 시간 -->
        WHERE user_idx = #{userIdx}
    </update>

    <!-- 이메일과 비밀번호로 사용자 정보 검증하는 쿼리 -->
    <select id="loginUser" resultMap="UserResultMap">
        SELECT *
        FROM User
        WHERE email = #{email} AND password = #{password}
    </select>

    <update id="saveRefreshToken">
        UPDATE User
        SET refresh_token = #{refreshToken}
        WHERE user_idx = #{userIdx}
    </update>

    <select id="getRefreshToken" resultType="String">
        SELECT refresh_token
        FROM User
        WHERE user_idx = #{userIdx}
    </select>

    <delete id="deleteRefreshToken">
        DELETE FROM User
        WHERE user_idx = #{userIdx}
    </delete>

</mapper>
